{
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "weeks",
              "triggerAtDay": [
                2
              ],
              "triggerAtHour": 10,
              "triggerAtMinute": 15
            }
          ]
        }
      },
      "id": "239f8a8c-58a6-4ecd-ab51-bef4cc35d47a",
      "name": "Weekly Campaign Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        416,
        -160
      ]
    },
    {
      "parameters": {
        "path": "cd8873a0-a281-4572-904e-2e1582d7c528",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "0b1a8a55-915a-4e33-ba25-362e42f95e2f",
      "name": "Anonymous Click Handler",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        416,
        48
      ],
      "webhookId": "cd8873a0-a281-4572-904e-2e1582d7c528"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "sheetName": {
          "__rl": true,
          "value": "",
          "mode": "list",
          "cachedResultName": "",
          "cachedResultUrl": ""
        }
      },
      "id": "74ec91cb-f491-4849-80b7-fdf4bc9e0af3",
      "name": "Get Employee List",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        768,
        -160
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "e0aPuL4PHlm3aS8W",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// Anonymous campaign setup\n// Select 20% of employees randomly\nconst employees = items;\nconst campaignId = 'CAMP_' + Date.now();\nconst sampleSize = Math.ceil(employees.length * 0.2);\n\n// Shuffle and select\nconst shuffled = employees.sort(() => 0.5 - Math.random());\nconst selected = shuffled.slice(0, sampleSize);\n\n// Create anonymous tracking URLs\nreturn selected.map(item => {\n // Generate unique ID that can't be traced back\n const uniqueId = Math.random().toString(36).substring(2, 15);\n const department = item.json.department || 'general';\n const template = Math.floor(Math.random() * 3) + 1;\n \n// Build anonymous tracking URL\nconst webhookId = '5881355f-1a60-4511-bebf-158468b83780'; // From your webhook node\nconst baseUrl = $env[\"WEBHOOK_URL\"] || `${$env[\"N8N_PROTOCOL\"]}://{$env[\"N8N_HOST\"]}:${$env[\"N8N_PORT\"]}/`;\nconst trackingUrl = `${baseUrl}webhook/${webhookId}/phishing/${uniqueId}/${department}/${template}`;\n \n return {\n json: {\n email: item.json.email,\n name: item.json.name || 'Team Member',\n department: department,\n trackingUrl: trackingUrl,\n template: template,\n campaignId: campaignId,\n timestamp: new Date().toISOString()\n }\n };\n});"
      },
      "id": "252a23e6-54ab-42ef-b842-f45363670240",
      "name": "Create Anonymous Campaign",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        976,
        -160
      ]
    },
    {
      "parameters": {
        "fromEmail": "CHANGE.ME.TO.YOUR.FROM.EMAIL@email.com",
        "toEmail": "={{$json[\"email\"]}}",
        "subject": "={{$json[\"subject\"]}}",
        "html": "={{$json[\"html\"]}}",
        "options": {
          "allowUnauthorizedCerts": false
        }
      },
      "id": "da1173ee-ba6f-473a-99c8-53ad195c01ee",
      "name": "Send Phishing Test",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        1376,
        -160
      ],
      "executeOnce": false,
      "webhookId": "d9404618-dc00-4f9b-99be-859ee7999a11",
      "credentials": {
        "smtp": {
          "id": "nmw1xBOhoHlpRxct",
          "name": "SMTP account"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// Generate phishing templates\nreturn items.map(item => {\n const json = item.json;\n const templateNum = json.template;\n const trackingUrl = json.trackingUrl;\n const firstName = json.name.split(' ')[0];\n\n const templates = [\n {\n subject: '‚ö†Ô∏è Password Expiry Notice - Action Required',\n html: `\n <div style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\">\n <div style=\"background: linear-gradient(90deg, #ff6b6b 0%, #ee5a24 100%); color: white; padding: 20px;\">\n <h2 style=\"margin: 0;\">‚ö†Ô∏è IT Security Notice</h2>\n </div>\n <div style=\"padding: 25px; background: #f8f9fa;\">\n <p>Hello ${firstName},</p>\n <p style=\"color: #d63031; font-weight: bold;\">Your password expires in 4 hours!</p>\n <p>Our records show your password hasn't been updated in 90 days. To prevent account lockout, please update it immediately:</p>\n <div style=\"text-align: center; margin: 30px 0;\">\n <a href=\"${trackingUrl}\" style=\"display: inline-block; padding: 14px 28px; background: #0984e3; color: white; text-decoration: none; border-radius: 5px; font-weight: bold;\">Reset Password Now ‚Üí</a>\n </div>\n <p style=\"color: #636e72; font-size: 13px; border-top: 1px solid #dfe6e9; padding-top: 15px; margin-top: 30px;\">\n This is an automated message from IT Security. Do not reply to this email.<br>\n Reference ID: SEC-${Math.random().toString(36).substring(2, 9).toUpperCase()}\n </p>\n </div>\n </div>\n `\n },\n {\n subject: 'Document shared with you: Q4_Budget_Final.xlsx',\n html: `\n <div style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\">\n <div style=\"text-align: center; padding: 20px; background: white; border-bottom: 2px solid #f1f3f4;\">\n <div style=\"font-size: 24px; color: #4285f4;\">‚òÅÔ∏è CloudDocs</div>\n </div>\n <div style=\"padding: 30px; background: #fafafa;\">\n <p>Hi ${firstName},</p>\n <p>Sarah Martinez shared a document with you:</p>\n <div style=\"background: white; border: 1px solid #e0e0e0; border-radius: 8px; padding: 20px; margin: 20px 0;\">\n <div style=\"display: flex; align-items: center;\">\n <span style=\"font-size: 28px; margin-right: 15px;\">üìä</span>\n <div>\n <div style=\"font-weight: bold; font-size: 16px;\">Q4_Budget_Final.xlsx</div>\n <div style=\"color: #5f6368; font-size: 14px; margin-top: 5px;\">Shared by Sarah Martinez ‚Ä¢ 1.2 MB</div>\n </div>\n </div>\n <div style=\"background: #fef7e0; border-left: 3px solid #fbbc04; padding: 10px; margin: 15px 0; font-size: 14px;\">\n \"Please review before tomorrow's meeting - made some important changes to projections\" </div>\n <a href=\"${trackingUrl}\" style=\"display: inline-block; padding: 10px 24px; background: #1a73e8; color: white; text-decoration: none; border-radius: 4px; font-weight: 500; margin-top: 10px;\">Open Document</a>\n </div>\n <p style=\"color: #5f6368; font-size: 12px; margin-top: 25px;\">\n This notification was sent to ${firstName} because someone shared a CloudDocs file with you.<br>\n CloudDocs - Simple, Secure, Seamless\n </p>\n </div>\n </div>\n `\n },\n {\n subject: 'Unusual Activity Detected - Verify Your Account',\n html: `\n <div style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\">\n <div style=\"background: #1a1a1a; color: white; padding: 25px; text-align: center;\">\n <h2 style=\"margin: 0; font-size: 22px;\">üîê Security Alert</h2>\n </div>\n <div style=\"background: #fff3cd; border: 1px solid #ffeeba; padding: 15px; margin: 0;\">\n <strong>‚ö†Ô∏è Suspicious activity detected on your account</strong>\n </div>\n <div style=\"padding: 25px; background: white;\">\n <p>Dear ${firstName},</p>\n <p>We've detected unusual sign-in activity on your account:</p>\n <div style=\"background: #f8f9fa; border-left: 4px solid #dc3545; padding: 15px; margin: 20px 0;\">\n <strong>New Device Login Attempt</strong><br>\n Location: Moscow, Russia<br>\n Device: Windows PC (Chrome)<br>\n Time: ${new Date().toLocaleString()}<br>\n IP: 185.220.xxx.xxx\n </div>\n <p><strong>If this wasn't you, secure your account immediately:</strong></p>\n <div style=\"text-align: center; margin: 25px 0;\">\n <a href=\"${trackingUrl}\" style=\"display: inline-block; padding: 12px 30px; background: #dc3545; color: white; text-decoration: none; border-radius: 4px; font-weight: bold;\">Secure Account Now</a>\n </div>\n <div style=\"background: #f8f9fa; padding: 15px; margin-top: 20px; font-size: 13px; color: #6c757d;\">\n If you recognized this activity, you can safely ignore this email. We take your security seriously and will continue monitoring for suspicious activity.\n </div>\n </div>\n </div>\n `\n }\n ];\n\n const selectedTemplate = templates[templateNum - 1];\n\n return {\n json: {\n ...json,\n subject: selectedTemplate.subject,\n html: selectedTemplate.html\n }\n };\n});"
      },
      "id": "00748ecb-3a69-495a-a4fe-df1bb8e3c196",
      "name": "Generate Phishing Template",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1184,
        -160
      ]
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "",
          "mode": "id"
        }
      },
      "id": "39eb1454-920b-49e3-aeaa-370f1e13f232",
      "name": "Log Anonymous Stats",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        1728,
        -160
      ]
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "# Instant Phishing Training\n\nYou've clicked on a simulated phishing link!\n\n### Lessons Learned:\n- Always verify the sender's email address.\n- Hover over links to check the URL before clicking.\n- Look for urgent language or unexpected requests.\n\nVisit our security portal for full training materials.\n\n*This event is logged anonymously for aggregate metrics only.*",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "text/markdown"
              }
            ]
          }
        }
      },
      "id": "47841d96-fcbb-4ba1-908c-6b4380e0da11",
      "name": "Instant Training Page",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        976,
        48
      ]
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "id": "2994e051-501b-4b95-acc6-efbd0b0e1c06",
      "name": "Log Anonymous Click",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        768,
        48
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "id": "3ef4d502-b369-46c9-b0b4-b8233499ec40",
      "name": "Weekly Report",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        416,
        240
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "sheetName": {
          "__rl": true,
          "value": "",
          "mode": "list",
          "cachedResultName": "",
          "cachedResultUrl": ""
        }
      },
      "id": "69896634-e8ac-465b-bdaa-fc671b2637a5",
      "name": "Get Weekly Stats",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        768,
        240
      ]
    },
    {
      "parameters": {
        "functionCode": "// Calculate anonymous metrics\nconst stats = items;\nconst oneWeekAgo = new Date();\noneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n\n// Filter this week's data\nconst thisWeek = stats.filter(item => {\n const date = new Date(item.json.Timestamp);\n return date > oneWeekAgo;\n});\n\n// Separate sent vs clicked\nconst sent = thisWeek.filter(s => s.json.Status === 'Sent');\nconst clicked = thisWeek.filter(s => s.json.Status === 'Clicked');\n\n// Department analysis\nconst deptStats = {};\nsent.forEach(s => {\n const dept = s.json.Department;\n if (!deptStats[dept]) deptStats[dept] = { sent: 0, clicked: 0 };\n deptStats[dept].sent++;\n});\n\nclicked.forEach(c => {\n const dept = c.json.Department;\n if (!deptStats[dept]) deptStats[dept] = { sent: 0, clicked: 0 };\n deptStats[dept].clicked++;\n});\n\n// Calculate department click rates\nconst deptPerformance = Object.entries(deptStats).map(([dept, stats]) => ({\n department: dept,\n sent: stats.sent,\n clicked: stats.clicked,\n rate: ((stats.clicked / stats.sent) * 100).toFixed(1) + '%'\n})).sort((a, b) => parseFloat(b.rate) - parseFloat(a.rate));\n\n// Template effectiveness\nconst templateStats = {};\nclicked.forEach(c => {\n const template = c.json.Template;\n templateStats[template] = (templateStats[template] || 0) + 1;\n});\n\nconst overallClickRate = sent.length === 0 ? 0 : ((clicked.length / sent.length) * 100).toFixed(1); // Avoid NaN\n\nreturn [{\n json: {\n reportDate: new Date().toISOString(),\n period: 'Last 7 Days',\n totalSent: sent.length,\n totalClicks: clicked.length,\n clickRate: overallClickRate + '%',\n departmentStats: deptPerformance,\n templateEffectiveness: {\n passwordExpiry: templateStats['1'] || 0,\n sharedDocument: templateStats['2'] || 0,\n securityAlert: templateStats['3'] || 0\n },\n riskLevel: overallClickRate > 25 ? 'HIGH' : overallClickRate > 10 ? 'MEDIUM' : 'LOW',\n trend: overallClickRate > 15 ? 'üìà Needs Improvement' : 'üìâ Improving',\n recommendations: overallClickRate > 25 \n ? ['Schedule all-hands security training', 'Increase awareness communications', 'Focus on ' + (deptPerformance[0]?.department || 'N/A') + ' department']\n : overallClickRate > 10\n ? ['Continue regular training', 'Share success stories', 'Target high-risk departments']\n : ['Maintain current program', 'Consider advanced scenarios', 'Celebrate improvement']\n }\n}];"
      },
      "id": "3852d0cb-4ce2-445a-be7f-ab6d1ad4382e",
      "name": "Calculate Anonymous Metrics",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        976,
        240
      ]
    },
    {
      "parameters": {
        "functionCode": "// Format report for Slack/Email\nconst metrics = $json;\nconst riskEmoji = metrics.riskLevel === 'HIGH' ? 'üî¥' : metrics.riskLevel === 'MEDIUM' ? 'üü°' : 'üü¢';\n\n// Create department leaderboard (safe for empty array)\nconst deptLeaderboard = (metrics.departmentStats || [])\n .slice(0, 5)\n .map((d, i) => `${i + 1}. ${d.department}: ${d.rate} (${d.clicked}/${d.sent} clicked)`)\n .join('\\n');\n\n// Template effectiveness\nconst templateReport = `\nüéØ Most Effective Phishing Types:\n‚Ä¢ Password Expiry: ${metrics.templateEffectiveness?.passwordExpiry || 0} clicks\n‚Ä¢ Shared Document: ${metrics.templateEffectiveness?.sharedDocument || 0} clicks \n‚Ä¢ Security Alert: ${metrics.templateEffectiveness?.securityAlert || 0} clicks\n`;\n\nconst slackMessage = `\n${riskEmoji} *Weekly Phishing Defense Report*\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n\nüìä *Overall Statistics*\n‚Ä¢ Phishing Tests Sent: ${metrics.totalSent}\n‚Ä¢ Clicks Recorded: ${metrics.totalClicks}\n‚Ä¢ Click Rate: *${metrics.clickRate}*\n‚Ä¢ Risk Level: *${metrics.riskLevel}*\n‚Ä¢ Trend: ${metrics.trend}\n\nüèÜ *Department Performance*\n${deptLeaderboard}\n\n${templateReport}\n\nüí° *Recommendations*\n${(metrics.recommendations || []).map(r => '‚Ä¢ ' + r).join('\\n')}\n\n_Note: All tracking is anonymous. No individual employee data is collected._\n\nüìà Full dashboard: company.com/security-metrics\n`;\n\nconst emailHTML = `\n<div style=\"font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; max-width: 600px; margin: 0 auto;\">\n <div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; border-radius: 10px 10px 0 0;\">\n <h1>${riskEmoji} Weekly Security Report</h1>\n <p style=\"opacity: 0.9;\">Anonymous Phishing Defense Metrics</p>\n </div>\n \n <div style=\"padding: 30px; background: #f8f9fa;\">\n <div style=\"background: white; padding: 20px; border-radius: 8px; margin-bottom: 20px;\">\n <h3>üìä Key Metrics</h3>\n <div style=\"display: grid; grid-template-columns: 1fr 1fr; gap: 15px;\">\n <div style=\"padding: 10px; background: #f1f3f4; border-radius: 4px;\">\n <div style=\"font-size: 24px; font-weight: bold; color: #1a73e8;\">${metrics.clickRate}</div>\n <div style=\"font-size: 12px; color: #666;\">Click Rate</div>\n </div>\n <div style=\"padding: 10px; background: #f1f3f4; border-radius: 4px;\">\n <div style=\"font-size: 24px; font-weight: bold; color: ${metrics.riskLevel === 'HIGH' ? '#d93025' : metrics.riskLevel === 'MEDIUM' ? '#fbbc04' : '#34a853'};\">${metrics.riskLevel}</div>\n <div style=\"font-size: 12px; color: #666;\">Risk Level</div>\n </div>\n </div>\n </div>\n \n <div style=\"background: white; padding: 20px; border-radius: 8px;\">\n <h3>üèÜ Department Leaderboard</h3>\n ${(metrics.departmentStats || []).map((d, i) => `\n <div style=\"padding: 10px; border-bottom: 1px solid #f1f3f4;\">\n <strong>${i + 1}. ${d.department}</strong>: ${d.rate} click rate\n </div>\n `).join('')}\n </div>\n </div>\n \n <div style=\"background: #343a40; color: white; padding: 20px; text-align: center; border-radius: 0 0 10px 10px;\">\n <p style=\"margin: 5px; font-size: 12px;\">All metrics are anonymous. No individual tracking performed.</p>\n </div>\n</div>\n`;\n\n// Return using metrics directly (no 'item' needed for single-item input)\nreturn [{\n json: {\n ...metrics,\n slackMessage: slackMessage,\n emailHTML: emailHTML\n }\n}];"
      },
      "id": "8e48ded7-df1f-47a6-b89c-4527d9e7016a",
      "name": "Format Report",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1184,
        240
      ]
    },
    {
      "parameters": {
        "fromEmail": "CHANGE.ME.TO.YOUR.FROM.EMAIL@email.com",
        "toEmail": "CHANGE.ME.TO.who.should.receive.the.weekly.report@email.com",
        "subject": "=üìä Weekly Phishing Defense Report - {{$json[\"riskLevel\"]}} Risk",
        "html": "={{$json[\"emailHTML\"]}}",
        "options": {}
      },
      "id": "d0e6e22b-b1a1-4f6f-913f-a95229422aaa",
      "name": "Email Report",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        1376,
        240
      ],
      "webhookId": "a9a176c7-03f9-4bbb-98d6-918e77fffcd8",
      "credentials": {
        "smtp": {
          "id": "nmw1xBOhoHlpRxct",
          "name": "SMTP account"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "return {\n json: {\n department: $json.department,\n template: $json.template,\n status: 'Sent',\n timestamp: $json.timestamp\n }\n};"
      },
      "id": "db6d7dba-c964-4bfc-8f6d-471f8198e9bf",
      "name": "Format Sent Log",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1552,
        -160
      ]
    },
    {
      "parameters": {
        "functionCode": "const department = $json.params[\"department\"];\nconst template = $json.params[\"template\"];\n\nreturn [{\n json: {\n department,\n template,\n status: 'Clicked',\n timestamp: new Date().toISOString()\n }\n}];"
      },
      "id": "01b13558-896f-4cc1-bfde-a0a6a487bced",
      "name": "Format Click Log",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        592,
        48
      ]
    },
    {
      "parameters": {
        "content": "## Getting started\n**Create credentials** Create credentials for google sheet (read write), google drive (read), and email.\n\n**Change from email** in the \"send phishing test, and \"Email Report\" nodes..\n\n**Update the Instant Training** page as well, that is sent to people who click ont he email.\n\n**Update the Phishing Template** as well. Good ideas is to use your own company's branding, and send it from an email with a similar url as your company's URL, to make it as sophisticated as possible. Some phishing scams also impersonate, that is pretend to send it from another employee.\n\n**Update the Phishing Template** as well. Good ideas is to use your own company's branding, and send it from an email with a similar url as your company's URL, to make it as sophisticated as possible. Some phishing scams also impersonate, that is pretend to send it from another employee.\n\n**Update the webhook link** either in your n8n yaml file or in your .env file, change the WEBHOOK_URL=, and restart the container if using docker.\n",
        "height": 560,
        "width": 384
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -32,
        -160
      ],
      "typeVersion": 1,
      "id": "e460801d-8f23-4e19-a59c-86b77f4a48b4",
      "name": "Sticky Note"
    }
  ],
  "connections": {
    "Weekly Campaign Trigger": {
      "main": [
        [
          {
            "node": "Get Employee List",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Anonymous Click Handler": {
      "main": [
        [
          {
            "node": "Format Click Log",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Employee List": {
      "main": [
        [
          {
            "node": "Create Anonymous Campaign",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Anonymous Campaign": {
      "main": [
        [
          {
            "node": "Generate Phishing Template",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Phishing Template": {
      "main": [
        [
          {
            "node": "Send Phishing Test",
            "type": "main",
            "index": 0
          },
          {
            "node": "Format Sent Log",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Anonymous Click": {
      "main": [
        [
          {
            "node": "Instant Training Page",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Weekly Report": {
      "main": [
        [
          {
            "node": "Get Weekly Stats",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Weekly Stats": {
      "main": [
        [
          {
            "node": "Calculate Anonymous Metrics",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculate Anonymous Metrics": {
      "main": [
        [
          {
            "node": "Format Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Report": {
      "main": [
        [
          {
            "node": "Email Report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Sent Log": {
      "main": [
        [
          {
            "node": "Log Anonymous Stats",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Click Log": {
      "main": [
        [
          {
            "node": "Log Anonymous Click",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "5dc6e67c991cf2e3caadd6e211fa62501b73fb5108da2f896f5710ae50bc2723"
  }
}